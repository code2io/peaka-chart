nameOverride: ""
fullnameOverride: ""

# disable this if you want to use an external postgresql server
postgresql:
  enabled: false

# disable this if you want to use an external nfs server
nfsServer:
  enabled: true
  # set this if you are using an external nfs server
  nfsServerAddress: ""
  persistentVolume:
    # pv size of the nfs server
    size: 8Gi
    # keep the nfs pvc on helm uninstalls
    volumeDeletionProtection: true
    # path to be used as the nfs share
    mountPath: /nfsshare
  deployment:
    # it is our recommendation that you run nfs server as root, otherwise is not tested
    containerSecurityContext:
      enabled: true
      privileged: true
    containerPort: 2049
  servicePort: 2049

# nfs share to be used across some Peaka pods
nfsShare:
  # keep the nfs pvc on helm uninstalls
  volumeDeletionProtection: true
  # size of the nfs share
  size: 8Gi
  # what happens to a persistent volume when released from its claim (Retain/Delete)
  persistentVolumeReclaimPolicy: Retain
  # path that is exported by the NFS server
  path: "/"

# thrift store
hiveMetastore:
  enabled: true
  image:
    repository: bitsondatadev/hive-metastore
    tag: latest
    pullPolicy: IfNotPresent
  hadoopHeapSize: "10240"
  # db type to be used as metastore. One of mysql or postgres (only mysql tested)
  metastoreType: mysql
  servicePort: 9083
  # by default, hive metastore connects to minio using default minio user. If you want to change this,
  # create a user by entering accessKey, secretKey and policy in minio.users, then change below two values accordingly.
  minioAccessKey: ""
  minioSecretKey: ""

# s3 compatible object storage configuration. By default, Peaka uses MinIO.
# for the full list of values, see https://github.com/minio/minio/tree/master/helm/minio
minio:
  # do not disable as Peaka is not yet tested with other S3 storage options other than MinIO.
  enabled: true
  mode: standalone
  replicas: 1

mariadb:
  enabled: true
  replicaCount: 1
  db:
    user: peaka
    password: peaka
    name: metastore_db
